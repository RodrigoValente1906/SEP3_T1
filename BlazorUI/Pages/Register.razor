@page "/Register"
@using Domain.Model
@using Domain.Interfaces
@inject NavigationManager navMgr
@inject IAuth Auth;

   


<div class="container mb-5" style="width: 100%; height: 400px">
  <div class="row">
    <div class="col-sm">
      <!-- Section: Design Block -->
      <section class="">
        <!-- Jumbotron -->
        <div class="px-4 py-5 px-md-5 text-center text-lg-start">
          <div class="container">
            <div class="row gx-lg-5 align-items-center">
              <div class="col-lg-6 mb-5 mb-lg-0">
                <h1 class="my-5 display-3 fw-bold ls-tight">
                  The best offers <br />
                  <span style="color: #00887D">for your trips</span>
                </h1>
                <p style="color: hsl(217, 10%, 50.8%)">
                  Lorem ipsum dolor sit amet consectetur adipisicing elit.
                  Eveniet, itaque accusantium odio, soluta, corrupti aliquam
                  quibusdam tempora at cupiditate quis eum maiores libero
                  veritatis? Dicta facilis sint aliquid ipsum atque?
                </p>
              </div>
          
              <div class="col-lg-6 mb-5 mb-lg-0">
                <div class="card">
                  <div class="card-body py-5 px-md-5">
                    <h3 class="text-center mb-4">Register</h3>
                    <form>
                      <!-- 2 column grid layout with text inputs for the first and last names -->
                      <div class="row">
                        <div class="col-md-6 mb-4">
                          <div class="form-outline">
                            <input placeholder="First Name" type="text" id="form3Example1" class="form-control" @bind="firstName"/>
                          </div>
                        </div>
                        <div class="col-md-6 mb-4">
                          <div class="form-outline">
                            <input placeholder="Last Name" type="text" id="form3Example2" class="form-control" @bind="lastName"/>
                          </div>
                        </div>
                      </div>

                      <!-- Email input -->
                      <div class="form-outline mb-4">
                        <input placeholder="Email" type="email" id="form3Example3" class="form-control" @bind="email"/>
                      </div>

                      <!-- Password input -->
                      <div class="form-outline mb-4">
                        <input placeholder="Password" type="password" id="form3Example4" class="form-control" @bind="password"/>
                      </div>

                      <!-- Checkbox -->
                      <div class="form-check d-flex mb-4">
                        <label class="form-check-label" for="form2Example33">Subscribe to our newsletter</label>
                        <input class="form-check-input me-2" type="checkbox" value="" id="form2Example33"  @bind="checkBox"/>
                      </div>

                      <!-- Submit button -->
                      <button type="submit" class="btn btn-primary btn-block mb-4" @onclick="@RegisterButtonClicked">
                        Register
                      </button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- Jumbotron -->
      </section>
      <!-- Section: Design Block -->
    </div>
  </div>
</div>
 @if (!string.IsNullOrEmpty(response))
    {
        <label>@response</label>
      
    }
@if (showModal)
    {
        <Modal>
            <p>Registration complete.</p>
            <button @onclick="@Proceed">Proceed</button>
        </Modal>
    }

@code {
  private string firstName;
  private string lastName;
  private string email;
  private string password;
  private bool checkBox;
  private string response = String.Empty;
  private bool showModal;

  private async Task RegisterButtonClicked()
  {
    User userToRegister = new User(firstName, lastName, email, password, "customer");

    response = "";
    try
    {
      
      await Auth.SaveUserAsync(userToRegister);
      showModal = true;
      
    }
    catch (Exception e)
    {
      
      response = e.Message;
      Console.WriteLine(response);

    }
  }
  
  private void Proceed()
  {
    showModal = false;
    navMgr.NavigateTo("/");
  }
}